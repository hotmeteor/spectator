{
  "openapi": "3.0.0",
  "info": {
    "title": "Test.v1",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get users",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "User ID",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Adam Campbell"
                      },
                      "email": {
                        "type": "string",
                        "description": "User email address",
                        "format": "email",
                        "example": "test@test.com"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": 1,
                        "name": "Adam Campbell",
                        "email": "test@test.com"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "User ID",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Adam Campbell"
                      },
                      "email": {
                        "type": "string",
                        "description": "User email address",
                        "format": "email",
                        "example": "test@test.com"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": 1,
                        "name": "Adam Campbell",
                        "email": "test@test.com"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users",
        "parameters": [
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "email"
              ]
            },
            "allowEmptyValue": true
          }
        ]
      },
      "post": {
        "summary": "Create user",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "operationId": "post-users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Adam Campbell"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@test.com"
                  }
                },
                "required": [
                  "name",
                  "email"
                ]
              }
            }
          }
        }
      }
    },
    "/path-without-operationId": {
      "get": {
        "summary": "Get route without operationId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "int": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/path-with-prefix": {
      "get": {
        "summary": "Get route with path prefix",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "int": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "path-with-prefix"
      }
    },
    "/users/{user}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a single user",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users-user"
      }
    },
    "/users-by-id/{user}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "user",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a single user",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users-user"
      }
    },
    "/posts/{postUuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "postUuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a post by UUID",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-posts-postUuid"
      }
    },
    "/posts/{postUuid}/comments/{comment}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "postUuid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "comment",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a comment for a post",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-posts-post-comment"
      }
    },
    "/orders/{order}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "53f7bd7b-2ee2-4be4-a15b-e09c76a150f9"
          },
          "name": "order",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Order",
        "description": "Orders are made by organizations to fund tree planting, and when trees are planted those orders will be marked as fullfilled. Orders may be partially fulfilled, and it is up to you if you wish to import those. Make sure to deduplicate the trees if you do.",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Generic_Problem"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Generic_Problem"
                }
              }
            }
          }
        },
        "operationId": "get-orders-uuid"
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Generic_Problem": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          }
        }
      }
    }
  }
}
